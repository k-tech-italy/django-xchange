[tox]
requires =
    tox>=4.2
    tox-gh-actions
    tox-uv>=1.20.2
env_list =
    lint
    pkg_meta
    d{52, 42}-py{313}
    d{52, 42, 32}-py{312}
skip_missing_interpreters = true

[testenv]
deps =
    d32: django==3.2.*
    d42: django==4.2.*
    d52: django==5.2.*
pass_env =
    PYTHONDONTWRITEBYTECODE
set_env =
    PYTHONPATH =
    PYTHONPATH = ./src/:tests/demo
change_dir = {toxinidir}
commands =
    {posargs:pytest tests -rw --create-db}
dependency_groups = dev
whitelist_externals =
    mkdir
    /usr/local/bin/psql
    /bin/sh
    /usr/local/bin/mysql
    /usr/local/mysql/bin/mysql
    /usr/bin/psql

[testenv:lint]
description = run static analysis and style check using ruff
skip_install = true
deps =
    pre-commit-uv>=4.1.1
pass_env =
    HOMEPATH
    PROGRAMDATA
commands =
    pre-commit run --all-files --show-diff-on-failure

[testenv:pkg_meta]
description = check that the long description is valid
skip_install = true
deps =
    check-wheel-contents>=0.6.3
    twine>=5.1.1
    uv>=0.5
commands =
    uv build --sdist --wheel --out-dir {env_tmp_dir} .
    twine check {env_tmp_dir}{/}*
    check-wheel-contents --no-config --ignore W004 {env_tmp_dir}

[testenv:docs]
description = build mkdocs documentation
skip_install = false
deps =
commands =
    mkdocs build {posargs:}
dependency_groups = docs

[testenv:type]
description = run type check on code base
commands =
    mypy --strict src/
dependency_groups = type-check, dev
